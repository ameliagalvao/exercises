/* considere a listas a seguir, como listas de teste:
triangulo = listOf(1, 2, 3, 4, 5, 4, 3, 2, 1, 0)
fibonacci = listOf(1, 1, 2, 3, 5, 8, 13, 21, 34)
vazio = listOf<Int>()

Faça um programa que exiba a soma de todos os números pares e o produto de todos os números ímpares de uma lista. Teste nas listas de teste
*/

val triangulo: List<Int> = listOf(1, 2, 3, 4, 5, 4, 3, 2, 1, 0)
val fibonacci: List<Int> = listOf(1, 1, 2, 3, 5, 8, 13, 21, 34)
val vazio: List<Int> = listOf<Int>()

fun main(){
    checkIfEmpty(triangulo)
    checkIfEmpty(fibonacci)
    checkIfEmpty(vazio)
}

fun checkIfEmpty(list1: List<Int>){
    if (list1.isEmpty()) {
        println("A lista ${list1} está vazia")
    } else {
        println("A soma dos itens pares da lista ${list1} é: ${sumEvenValues(list1)}")
        println("O produto dos itens ímpares da lista ${list1} é: ${productOddValues(list1)}")
    }
}

fun sumEvenValues(list: List<Int>):Int{
    var resultSum: Int = 0
    for(item in list.indices){
        if (list[item] % 2 == 0) {
            resultSum += list[item]
        }
    }
    return resultSum
}

fun productOddValues(list: List<Int>):Int{
    var resultPro: Int = 1
    for(item in list.indices){
        if (list[item] % 2 == 1) {
            resultPro *= list[item]
        }
    }
    return resultPro
}
